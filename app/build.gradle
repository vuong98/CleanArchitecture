plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'realm-android'
}

android {
    namespace 'com.trinityweareair.app'
    compileSdk 33

    defaultConfig {
        applicationId "com.trinityweareair.app"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled = true
    }
    flavorDimensions "default"
    productFlavors {
        dev {
            buildConfigField("String", "BASE_URL", "\"https://api.openweathermap.org/data/2.5/\"")
        }

    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // view model scope
    def lifecycle_version = "2.5.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"



    // glide library
    def glide_version = '4.15.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"


    // hilt
    def hilt_version ="2.44"
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"



    // retrofit
    def retrofit_version = '2.9.0'
    def gson_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    // okhttpclient
    def ok_httpclient_version = "4.10.0"
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")


    // coroutine
    def  coroutines_version = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //circle image
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    // room test helper
    testImplementation("androidx.room:room-testing:$room_version")


    def fragment_version = '1.5.5'
    def fragment_ktx_version = '1.5.5'
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"


    // dependencies for local unit test
    def junit_version = '4.13.2'
    testImplementation "junit:junit:$junit_version"
    testImplementation 'com.google.truth:truth:1.1.3'


    def mockito_version = '3.12.4'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation 'org.mockito:mockito-inline:2.25.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    def androidx_test_core_version = '1.4.0'
    implementation "androidx.test:core:$androidx_test_core_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$ok_httpclient_version"
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

}
// Allow references to generated code
kapt {
    correctErrorTypes true
}